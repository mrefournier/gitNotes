======
basics
======

list your branches:
git branches

create and switch to new branch:
git checkout -b <new branch name>

switch to branch:
git checkout <branch name>

rename branch:
git branch -m <old branch name> <new branch name>

delete branch:
<<<<<<< HEAD
git branch -d <branch name>

force delete branch -D:
git branch -D <branch name>

=======
merging
=======
go to target branch:
git checkout <traget branch to merge into>

use merge command:
git merge <source branch to merge>

=========================
rebase (advanced feature)
=========================
do not use rebase on a public branch!
clean up history before sharing branches

git log --oneline (get branch history)
git merge-base <branch name> master (get the original base of <branch name> created from master)
git rebase -i <commit-sha> (-i is for interactive)

squash the commits you want to rebase into a single commit:
pick <commit-sha>
squash <commit-sha>
squash <commit-sha>

choose the commit message you want to use

pull in changes from master then replay branch commits after
git rebase master

cherry picking:
git log --oneline (find the commit you want)
or
git log <branch name> --oneline

git checkout <branch name> (where do you want to put the commit? checkout that branch)

git cherry-pick <commit> (perform the cherry-pick to append the commit to head)

















more notes to come....
























